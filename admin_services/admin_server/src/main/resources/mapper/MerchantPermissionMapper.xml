<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="MerchantPermissionMapper">

	<resultMap id="BaseResultMap" type="com.xxyp.admin.common.model.merchant.MerchantPermission">
		<id property="id" column="id" />
		<result property="name" column="name" />
		<result property="loadDataMethodName" column="load_data_method" />
		<result property="menuUrl" column="menu_url" />
		<result property="moduleId" column="module_id" />
		<result property="orderIndex" column="order_index" />
		<result property="moduleName" column="module_name" />
		<result property="isMenu" column="is_menu" />
		
	</resultMap>
	<sql id="All_Column">
		id,name,load_data_method,menu_url,module_id,order_index,is_menu
	</sql>
	<select id="getPermission" parameterType="map" resultMap="BaseResultMap" >
		select
		<include refid="All_Column" />
		from merchant_permission permission
		<include refid="permissionSqlCondition"/>
		order by permission.order_index ASC
	</select>
	<select id="queryPermissionByIdSet" parameterType="map" resultMap="BaseResultMap">
	    select
		<include refid="All_Column" />
		from merchant_permission permission
		where id  in 
		<foreach  collection="idList" open="(" close=")" item="id" separator=",">
			#{id}
		</foreach> 
		order by permission.order_index ASC
	</select>
	<select id="queryPermissionForPage" parameterType="map" resultMap="BaseResultMap">
		select
		permission.id,permission.name, permission.load_data_method,
		permission.menu_url,permission.module_id,permission.order_index,apm.name module_name,permission.is_menu
		from merchant_permission permission
		left join merchant_permission_module apm on apm.id=permission.module_id
		<include refid="permissionSqlCondition"/>
		ORDER BY permission.module_id,permission.order_index ASC
		limit #{startIndex} ,#{pageSize}		
	</select>
	
	<select id="countPermissionForPage" parameterType="map" resultType="int">
		select count(1) 
		from merchant_permission permission
		left join merchant_permission_module apm on apm.id=permission.module_id
		<include refid="permissionSqlCondition"/>
	</select>
	
	<insert id="savePermission" parameterType="com.xxyp.admin.common.model.merchant.MerchantPermission">
	
		insert into merchant_permission(
			name,load_data_method,is_menu,menu_url,module_id,order_index
		)values (
			
			#{name},
			#{loadDataMethodName},
			#{isMenu},
			#{menuUrl},
			#{moduleId},
			#{orderIndex}
		)
	</insert>
	
	<update id="updatePermission" parameterType="com.xxyp.admin.common.model.merchant.MerchantPermission">
		update merchant_permission
			set
				name = #{name},
				load_data_method = #{loadDataMethodName},
				is_menu = #{isMenu},
				menu_url = #{menuUrl},
				module_id = #{moduleId},
				order_index = #{orderIndex}
		where id = #{id}
	</update>
	
	<delete id="deletePermissionById" parameterType="long">
		delete from merchant_permission where id = #{id}
	</delete>	
	
	<select id="getMaxOrderIndex" resultType="long">
		select max(order_index) from merchant_permission 
	</select>
	
	<update id="updatePermissionOrderIndex" parameterType="com.xxyp.admin.common.model.merchant.MerchantPermission">
		update merchant_permission
			set
				order_index = #{orderIndex}
		where id = #{id}
	</update>
	
	<sql id="permissionSqlCondition">
		<where>
			<if test="id!=null">
				permission.id = #{id}
			</if>
			<if test="name!=null and name !=''">
				and permission.name  like '%${name}%'
			</if>
			<if test="moduleId != null">
				and permission.module_id  = #{moduleId}
			</if>
			<if test="isMenu != null">
				and permission.is_menu  = #{isMenu}
			</if>
			
		</where>
	</sql>
	
</mapper>